service: portfolio-backend

variablesResolutionMode: null
configValidationMode: error

disabledDeprecations:
    - NEW_VARIABLES_RESOLVER # Disabled because of bref

provider:
    name: aws
    region: eu-west-2
    runtime: provided.al2
    lambdaHashingVersion: 20201221
    iam:
        deploymentRole: ${ssm(eu-west-2):portfolio-backend-cfnRole}
        role: ${ssm(eu-west-2):portfolio-backend-lambdaRole}
    deploymentBucket:
        name: ${ssm(eu-west-2):serverless-deploy-bucket}
    environment:
      APP_KEY: base64:${ssm:portfolio-backend-app-key~true}
      CACHE_DRIVER: array
      LOG_CHANNEL: errorlog
      DYNAMODB_EMAIL_TABLE_NAME: portfolio-backend-emails
    httpApi:
      id: ${ssm:portfolio-backend-http-gateway-id}

plugins:
    - ./vendor/bref/bref

# Exclude files from deployment
package:
  patterns:
    - '!node_modules/**'
    - '!tests/**'
    - '!terraform/**'

functions:
  api:
    handler: public/index.php
    description: 'API for portfolio backend'
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    layers:
      - ${bref:layer.php-74-fpm}
    events:
      - httpApi: 'POST /email'
  sendEmail:
    handler: serverless-artisan
    description: 'Sends Emails'
    timeout: 30
    environment:
      ARTISAN_COMMAND: send-email
      DESTINATION_ADDRESS: ${ssm:portfolio-backend-destination-address~true}
      SENDER_ADDRESS: ${ssm:portfolio-backend-sender-address~true}
    layers:
      - ${bref:layer.php-74}
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [ emails, StreamArn ]

resources:
  Resources:
    emails:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: portfolio-backend-emails
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
